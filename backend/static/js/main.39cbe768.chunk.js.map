{"version":3,"sources":["components/post.compenent.js","screens/homepage.screen.js","components/post-detail.component.js","components/buttons.component.js","components/comment.component.js","screens/post-detail.screen.js","screens/write.screen.js","components/navbar.component.js","App.js","serviceWorker.js","index.js"],"names":["ActionButton","props","post","action","type","width","height","viewBox","class","fill","xmlns","fill-rule","d","Post","className","url","slug","href","title","summary","author_name","PostList","useState","isLoaded","setIsLoaded","posts","setPosts","useEffect","axios","get","withCredentials","then","response","data","catch","error","alert","map","index","key","FullArticle","parse","html_content","options","headers","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","SubmitPostButton","inputs","onClick","e","preventDefault","JSON","stringify","current","value","content","console","log","window","location","SubmitCommentButton","commentInput","commentElement","target","parentElement","parentId","Number","dataset","parentType","CommentForm","splits","pathname","comment_url","useRef","data-parent-type","data-parent-id","ref","ReplyComment","showForm","setShowForm","PostDetail","setPost","post_url","Write","titleInput","summaryInput","contentInput","placeholder","autoComplete","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","App","path","exact","component","Boolean","hostname","match","getElementById","ReactDOM","render","postList","write","detailViewIdentifier","commentElements","querySelectorAll","forEach","comment","nodeId","appElement","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.39cbe768.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport function ActionButton(props)\n{\n  const {post, action} = props\n  if (action.type === 'save')\n  {\n    return (\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-bookmark-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.74.439L8 13.069l-5.26 2.87A.5.5 0 0 1 2 15.5V2z\"/>\n      </svg>\n    )\n  }\n  else\n  {\n    return (\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-bookmark-check-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" d=\"M4 0a2 2 0 0 0-2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4zm6.854 5.854a.5.5 0 0 0-.708-.708L7.5 7.793 6.354 6.646a.5.5 0 1 0-.708.708l1.5 1.5a.5.5 0 0 0 .708 0l3-3z\"/>\n      </svg>\n    )\n  }\n}\n\nexport default function Post(props)\n{\n  const { post } = props;\n  const className = props.className ? props.className : 'media';\n  let url = `post/${post.slug}`\n  return (\n    <div>\n      <div className={className}>\n        <div className='media-body'>\n            <h4 className='mt-0'><a href={url}>{post.title}</a></h4>\n            <h5>{post.summary}</h5>\n            <h6>By: {post.author_name}</h6>\n            <hr/>\n        </div>\n        <div>\n            <ActionButton post={post} action={{type: 'save'}} />\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\n\nimport Post from '../components/post.compenent';\n\nexport function PostList(props)\n{\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const url = \"http://localhost:8000/api/posts/\";\n\n  useEffect(() => {\n    axios.get(url, { withCredentials: true })\n    .then(response => {\n      setIsLoaded(true);\n      setPosts(response.data)\n    })\n    .catch(error => alert(`An error has occured: ${error}`));\n  }, [url]);\n\n  if (!isLoaded) {\n    return <>Loading...</>\n  }\n  else {\n    return (\n      posts.map(\n          (post, index) => <Post post={post} key={`${index}-{post.id}`} />\n      )\n    )\n  }\n}","import React from 'react';\n\nimport parse from 'html-react-parser';\n\nexport function FullArticle(props)\n{\n  const { post } = props;\n  return (\n    <div className='full-article'>\n      <h2>{post.title}</h2>\n      <h5>{post.summary}</h5>\n      <div>\n        {parse(`${post.html_content}`)}\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nimport axios from 'axios';\n\nconst getCookie = (name) => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '')\n    {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++)\n        {\n            var cookie = cookies[i].trim();\n            if (cookie.substring(0, name.length + 1) === (name + '=')) \n            {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n        return cookieValue;\n    }\n}\nconst csrftoken = getCookie('csrftoken');\nconst options = {\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken\n    },\n    withCredentials: true \n};\n\nexport function SubmitPostButton(props)\n{\n    const { url, inputs } = props;\n\n    function handleSubmit(e)\n    {\n        e.preventDefault();\n\n        const data = JSON.stringify({\n            'title': inputs.title.current.value,\n            'summary': inputs.summary.current.value,\n            'content': inputs.content.current.value,\n        });\n\n        axios.post(url, data, options)\n        .then(response => {\n            console.log(response);\n            window.location.href = '/';\n        })\n        .catch(error => alert(error));\n    }\n\n    return (\n        <button className='btn btn-primary' onClick={handleSubmit}>Submit</button>\n    )\n}\n\nexport function SubmitCommentButton(props)\n{\n    const { url, commentInput } = props;\n\n    function handleSubmit(e)\n    {\n        e.preventDefault();\n\n        const commentElement = e.target.parentElement;\n        const parentId = '' ? null : Number(commentElement.dataset.parentId);\n        const parentType = commentElement.dataset.parentType;\n        const data = JSON.stringify({\n            'parentId': parentId,\n            'parentType': parentType,\n            'comment': commentInput.current.value\n        });\n        \n        axios.post(url, data, options)\n        .then(response => console.log(response))\n        .catch(error => alert(error));\n        commentInput.current.value = ''\n    }\n\n    return (\n        <button className='btn btn-primary' onClick={handleSubmit}>Submit</button>\n    )\n}","import React, { useRef, useState } from 'react';\n\nimport { SubmitCommentButton } from './buttons.component'\n\n\nexport function CommentForm(props)\n{\n\tconst { parentId, parentType } = props;\n\n\tconst path = window.location.pathname;\n    const splits = path.split('/');\n    // this log is run four times for some reason\n    // not a good idea; replace with regex later on\n    const slug = splits[splits.length-1] ? splits[splits.length-1] : splits[splits.length-2]\n    console.log(slug)\n    const comment_url = `http://localhost:8000/api/post/${slug}/comments/`;\n\n\t\n\tconst commentInput = useRef();\n\n\treturn (\n\t\t<div className='child-comment-form' data-parent-type={parentType} data-parent-id={parentId}>\n\t\t\t<div className='form-group'>\n\t\t\t\t<textarea ref={commentInput} className='form-control'></textarea>\n\t\t\t</div>\n\t\t\t<SubmitCommentButton url={comment_url} commentInput={commentInput} />\n\t\t</div>\n\t)\n}\n\nexport function ReplyComment(props)\n{\n\tconst { parentId } = props;\n\tconst [showForm, setShowForm] = useState(false);\n\n\tfunction handleSubmit(e)\n\t{\n\t\tconsole.log(e);\n\t\te.preventDefault();\n\t\tsetShowForm(true);\n\t}\n\n\tif (showForm) {\n\t\treturn <CommentForm parentId={parentId} parentType={'comment'} />\n\t}\n\treturn (\n\t\t<button className=\"btn btn-primary btn-sm\" onClick={handleSubmit}>Reply</button>\n\t)\n}","// might remove later\nimport React, { useState, useEffect} from 'react';\n\nimport axios from 'axios';\n\nimport { FullArticle } from '../components/post-detail.component';\nimport { CommentForm } from '../components/comment.component';\n\nexport function PostDetail(props)\n{\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [post, setPost] = useState([]);\n\n    const path = window.location.pathname;\n    const splits = path.split('/');\n    // this log is run four times for some reason\n    // replace with regex later on\n    const slug = splits[splits.length-1] ? splits[splits.length-1] : splits[splits.length-2]\n    console.log(slug)\n    const post_url = `http://localhost:8000/api/post/${slug}/`;\n\n    useEffect(() => {\n      axios.get(post_url, { withCredentials: true })\n      .then(response => {\n        setIsLoaded(true);\n        setPost(response.data)\n      })\n      .catch(error => alert(`An error has occured: ${error}`))\n    }, [post_url])\n  \n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    }\n    else {\n        return (\n          <>\n            <FullArticle post={post} />\n            <CommentForm parentId={''} parentType={'post'} />\n          </>\n        )\n      }\n  }","import React, { useRef } from 'react';\n\nimport { SubmitPostButton } from '../components/buttons.component';\n\nexport function Write(props)\n{\n    const titleInput = useRef(),\n          summaryInput = useRef(),\n          contentInput = useRef();\n    const url = 'http://localhost:8000/api/posts/'\n\n    return (\n        <>\n            <div className='form-group'>\n                <input ref={titleInput} className='form-control' type='text'\n                    name='title' placeholder='Enter Title' autoComplete='off'/>\n            </div>\n            <div className='form-group'>\n                <input ref={summaryInput} className='form-control' type='text'\n                    name='summary' placeholder='Enter Summary' autoComplete='off'/>\n            </div>\n            <div className='form-group'>\n                <textarea ref={contentInput} className='form-control' name='content'\n                    placeholder='Enter Content' autoComplete='off'>\n                </textarea>\n            </div>\n            <SubmitPostButton url={url} inputs={{\n                title: titleInput,\n                summary: summaryInput,\n                content: contentInput\n            }} />\n        </>\n    )\n}","import React from 'react';\n\nexport function Navbar(props)\n{\n    return (\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <a class=\"navbar-brand\" href=\"/\">Kroid</a>\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul class=\"navbar-nav\">\n                    <li class=\"nav-item active\">\n                        <a class=\"nav-link\" href=\"/\">Home <span class=\"sr-only\">(current)</span></a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"/write/\">Write</a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n}","import React from 'react';\nimport { \n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom'\n\nimport { Navbar } from './components/navbar.component';\nimport { PostList } from './screens/homepage.screen';\nimport { PostDetail } from './screens/post-detail.screen';\nimport { Write } from './screens/write.screen';\n\nfunction App()\n{\n  return (\n    <Router>\n      <div className=\"container\">\n        <Navbar />\n        <Route path=\"/\" exact component={PostList} />\n        <Route path=\"/write/\" component={Write} />\n        <Route path=\"/post/:slug/\" component={PostDetail} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { PostList } from './screens/homepage.screen';\nimport { PostDetail } from './screens/post-detail.screen';\nimport { Write } from './screens/write.screen';\n\nimport { Navbar } from './components/navbar.component';\nimport { ReplyComment } from './components/comment.component';\n\nimport App from \"./App\"\n\nimport * as serviceWorker from './serviceWorker';\n\n// gonna have to improve this\nconst djangoIdentifier = document.getElementById('kroid');\nif (djangoIdentifier) {\n    ReactDOM.render(<Navbar />, document.getElementById('kroid-nav'));\n    const postList = document.getElementById('post-list');\n    if (postList) {\n        ReactDOM.render(<PostList />, postList);\n    }\n    const write = document.getElementById('write');\n    if (write) {\n        ReactDOM.render(<Write />, write);\n    }\n    const detailViewIdentifier = document.getElementById('article-detail');\n    if (detailViewIdentifier) {\n        ReactDOM.render(<PostDetail />, detailViewIdentifier);\n        const commentElements = document.querySelectorAll(\".child-comment-button\");\n        if (commentElements) {\n            commentElements.forEach(comment => {\n                console.log(comment);\n                const parentId = comment.dataset.nodeId;\n                ReactDOM.render(<ReplyComment parentId={parentId} />, comment);\n            });\n        }\n    }\n}\n\nconst appElement =  document.getElementById('root');\nif (appElement)\n{\n    ReactDOM.render(<App />, appElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}